I"ß<h4 id="abstract"><strong>Abstract</strong></h4>

<p>This post shows how to derive the derivative of common neural network modules such as linear transformation, softmax cross entropy loss and some activation functions step by step.</p>

<h4 id="notations"><strong>Notations</strong></h4>

\[\begin{align}
	&amp; \vec{W_{a*}} \tag{row a of Matrix W} \\
	&amp; \vec{W_{*a}} \tag{column a of Matrix W}
\end{align}\]

<h4 id="techniques-for-derivation"><strong>Techniques for derivation</strong></h4>

\[\begin{align}
	(\frac{f}{g})^{'} &amp;= \frac{f^{'}g + fg^{'}}{g^2} \tag{the quotient rule} \\
	(\sum_{i=1}^{n} f_i)^{'} &amp;= {f_1}^{'}+{f_2}^{'}+ ...{f_n}^{'} \tag{derivative of summation} \\
	(\log f)^{'} &amp;= \frac{1}{f} \tag{when log base = e} \\
	\frac{df}{dg} &amp;= \frac{df}{dh} \frac{dh}{dg} \tag{chain rule} \\
\end{align}\]

<h2 id="linear-transformation"><strong>Linear Transformation</strong></h2>

<h4 id="forward"><strong>Forward</strong></h4>

\[\begin{align}
	k &amp;\in R \tag{size of the mini-batch} \\
	x &amp;\in R^{k \times m} \tag{the input of linear transformation} \\
	y &amp;\in R^{k \times n} \tag{the output of linear transformation} \\
	W &amp;\in R^{m \times n} \tag{the weight matrix} \\
	b &amp;\in R^{n} \tag{the bias term} \\
	L &amp;\in R \tag{scalar loss of the model} \\
	y &amp;= xW + b \tag{common alternative of y=Wx} 
\end{align}\]

<h4 id="get-fracdldx-and-fracdldw"><strong>Get \(\frac{dL}{dx}\) and \(\frac{dL}{dW}\)</strong></h4>

\[\begin{align}
	\frac{dL}{dx_{a,b}} &amp;= \sum_i^{k} \sum_j^{n} \frac{dL}{dy_{i,j}} \frac{dy_{i,j}}{dx_{a,b}} \tag{summation for all connected intermediate variables}\\
	&amp;= \vec{\frac{dL}{dy}_{a*}} \cdot \vec{W_{b*}} \tag{dot product of row a of $\frac{dL}{dy}$ and row b of W}\\
\end{align}\]

\[\begin{align}
	\frac{dL}{dx} &amp;=
	\begin{bmatrix}
		\frac{dL}{dx_{1,1}} &amp; \frac{dL}{dx_{1,2}} &amp; \dots  &amp; \frac{dL}{dx_{1,m}} \\
		\frac{dL}{dx_{2,1}} &amp; \frac{dL}{dx_{2,2}} &amp; \dots  &amp; \frac{dL}{dx_{2,m}} \\
		\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
		\frac{dL}{dx_{k,1}} &amp; \frac{dL}{dx_{k,2}} &amp; \dots  &amp; \frac{dL}{dx_{k,m}}
	\end{bmatrix} \tag{$\frac{dL}{dx} \in R^{k \times m}$} \\
	&amp;=
	\begin{bmatrix}
		\vec{\frac{dL}{dy}_{1*}} \cdot \vec{W_{1*}} &amp; \vec{\frac{dL}{dy}_{1*}} \cdot \vec{W_{2*}} &amp; \dots  &amp; \vec{\frac{dL}{dy}_{1*}} \cdot \vec{W_{m*}} \\
		\vec{\frac{dL}{dy}_{2*}} \cdot \vec{W_{1*}} &amp; \vec{\frac{dL}{dy}_{2*}} \cdot \vec{W_{2*}} &amp; \dots  &amp; \vec{\frac{dL}{dy}_{2*}} \cdot \vec{W_{m*}} \\
		\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
		\vec{\frac{dL}{dy}_{k*}} \cdot \vec{W_{1*}} &amp; \vec{\frac{dL}{dy}_{k*}} \cdot \vec{W_{2*}} &amp; \dots  &amp; \vec{\frac{dL}{dy}_{k*}} \cdot \vec{W_{m*}}
	\end{bmatrix} \tag{substitution} \\
	&amp;=
	\begin{bmatrix}
		\vec{\frac{dL}{dy}_{1*}} \\
		\vec{\frac{dL}{dy}_{2*}} \\
		\vdots \\
		\vec{\frac{dL}{dy}_{k*}}
	\end{bmatrix}
	\begin{bmatrix}
		\vec{W_{1*}} &amp; \vec{W_{2*}} &amp; \dots &amp; \vec{W_{m*}} 
	\end{bmatrix}
	= \frac{dL}{dy} W^T \tag{$\frac{dL}{dy} \in R^{k \times n}, W^T \in R^{n \times m}$} \\
	\frac{dL}{dW} &amp;= x^T \frac{dL}{dy} \tag{similarly} \\
	\frac{dL}{db} &amp;= 
	\begin{bmatrix}
		sum(\vec{\frac{dL}{dy}_{*1}}) &amp; sum(\vec{\frac{dL}{dy}_{*2}}) &amp; \dots &amp; sum(\vec{\frac{dL}{dy}_{*m}})
	\end{bmatrix} \tag{$sum(\vec{\frac{dL}{dy}_{*a}}) = \sum_i^{k} \frac{dL}{dy_{i, a}}$}
\end{align}\]

<h2 id="softmax-and-cross-entropy-loss"><strong>Softmax and Cross Entropy Loss</strong></h2>

<h4 id="forward-process"><strong>Forward Process</strong></h4>

\[\begin{align}
	h &amp;\in R^{n} \tag{the input of softmax, usually the last hidden layer} \\
	o &amp;\in R^{n} \tag{the output of softmax, all elements sum up to 1} \\
	t &amp;\in R^{n} \tag{target one-hot vector, only one element is 1} \\
	o &amp;= softmax(h) \tag{softmax function} \\
	o_i &amp;= \frac{e^{h_i}}{\sum_{j}^{n} e^{h_j}} \tag{element-wise softmax output $o_i$ given h} \\
	E &amp;= -\sum_{i}^{n} t_i \log o_i \tag{cross entropy produce loss given o and t}
\end{align}\]

<h4 id="get-fracd-ed-h-when-e---sum_int_ilogo_i-and-o_i--fraceh_isum_jn-eh_j"><strong>Get \(\frac{d E}{d h}\) when \(E = -\sum_{i}^{n}{t_i\log(o_i)}\) and \(o_i = \frac{e^{h_i}}{\sum_{j}^{n} e^{h_j}}\)</strong></h4>

\[\begin{align}
	\frac{d E}{d h_i} &amp;= \sum_{a}^{n} \frac{d E}{d o_a} \frac{d o_a}{d h_i} \tag{chain rule} \\
	\frac{d E}{d o_a} &amp;= -\frac{t_a}{o_a} \tag{for $1 \leq a \leq n$} \\
	\frac{d o_a}{d h_i} &amp;= \frac{e^{h_a} \sum_{j}^{n} e^{h_j} - e^{h_a} e^{h_a}}{(\sum_{j}^{n} e^{h_j})^2} \tag{for a = i, the quotient rule} \\
	&amp;= \frac{e^{h_a}}{\sum_{j}^{n} e^{h_j}} - (\frac{e^{h_a}}{\sum_{j}^{n} e^{h_j}})^2 \tag{for a = i} \\
	&amp;= o_a (1 - o_a) \tag{for a = i} \\
	\frac{d o_a}{d h_i} &amp;= \frac{0 - e^{h_a} e^{h_i}}{(\sum_{j}^{n} e^{h_j})^2} \tag{for $a \neq$ i, the quotient rule} \\
	&amp;= - \frac{e^{h_a}}{\sum_{j}^{n} e^{h_j}} \frac{e^{h_i}}{\sum_{j}^{n} e^{h_j}} \tag{for $a \neq$ i} \\
	&amp;= - o_a o_i \tag{for $a \neq$ i} \\
	\frac{d E}{d h_i} &amp;= \sum_{a}^{n} \frac{d E}{d o_a} \frac{d o_a}{d h_i} \tag{chain rule} \\
	&amp;= \frac{d E}{d o_i} \frac{d o_i}{d h_i} + \sum_{a \neq i}^{n} \frac{d E}{d o_a} \frac{d o_a}{d h_i} \tag{separate a=i and a $\neq$ i} \\
	&amp;= -\frac{t_i}{o_i} o_i(1-o_i) + \sum_{a \neq i}^{n} -\frac{t_a}{o_a} (-o_a o_i) \tag{substitution} \\
	&amp;= -t_i + t_i o_i + \sum_{a \neq i}^n t_a o_i \tag{elimination} \\
	&amp;= -t_i + \sum_{a}^n t_a o_i \tag{merge $t_i o_i$ with summation term} \\
	&amp;= -t_i + o_i \sum_{a}^n t_a \tag{take constant $o_i$ out of summation term} \\
	&amp;= o_i - t_i \tag{summation evaluate to 1} \\
	\frac{d E}{d h} &amp;= o -t \tag{combine element-wise results}
\end{align}\]

<h2 id="activation-functions"><strong>Activation Functions</strong></h2>

<h4 id="sigmoid"><strong>Sigmoid</strong></h4>

\[\begin{align}
	Sigmoid(x_i) &amp;= \frac{1}{1+e^{-x_i}} \tag{element-wise operation on x} \\
	\frac{dSigmoid(x_i)}{dx_i} &amp;= (1+e^{-x_i})^{-2} (1+e^{-x_i})' \tag{chain rule, let $g(x)=1+e^{-x_i}$} \\
	&amp;= (1+e^{-x_i})^{-2} -e^{-x_i} \tag{chain rule, let $g(x)=e^{-x_i}$} \\
	&amp;= \frac{1}{1+e^{-x_i}} \frac{-e^{-x_i}}{1+e^{-x_i}} \tag{rewrite} \\
	&amp;= \frac{1}{1+e^{-x_i}} \frac{1+e^{-x_i}-1}{1+e^{-x_i}} \tag{trick: x = 1+x-1} \\
	&amp;= \frac{1}{1+e^{-x_i}} (\frac{1+e^{-x_i}}{1+e^{-x_i}} - \frac{1}{1+e^{-x_i}}) \tag{rewrite} \\
	&amp;= Sigmoid(x_i)(1-Sigmoid(x_i)) \tag{substitution}
\end{align}\]

<h4 id="tanh"><strong>Tanh</strong></h4>

\[\begin{align}
	Tanh(x_i) &amp;= \frac{e^{x_i} + e^{-x_i}}{e^{x_i} - e^{-x_i}} \tag{element-wise operation on x}
\end{align}\]

\[\begin{align}
	\frac{dTanh(x_i)}{dx_i} &amp;= \frac{(e^{x_i} + e^{-x_i})(e^{x_i} + e^{-x_i}) + (e^{x_i} - e^{-x_i})(e^{x_i} - e^{-x_i})}{(e^{x_i} + e^{-x_i})^2} \tag{the quotient rule} \\
	\frac{dTanh(x_i)}{dx_i} &amp;= 1 + (\frac{e^{x_i} - e^{-x_i}}{e^{x_i} + e^{-x_i}})^2 \tag{$(\frac{e^{x_i} + e^{-x_i}}{e^{x_i} + e^{-x_i}})^2 = 1$} \\
	\frac{dTanh(x_i)}{dx_i} &amp;= 1 + tan(x_i)^2 \tag{substitution}
\end{align}\]

<h4 id="relu"><strong>ReLU</strong></h4>

\[\begin{align}
	ReLU(x_i) &amp;= max(0, x_i) \tag{element-wise operation on x}\\
	\frac{dReLU(x_i)}{dx_i} &amp;= 
	\begin{cases}
		1 &amp; \text{when $x_i &gt; 0$} \\
		0 &amp; \text{otherwise}
	\end{cases} \nonumber
\end{align}\]

:ET